"use strict";(()=>{var e={};e.id=7442,e.ids=[7442],e.modules={11185:e=>{e.exports=require("mongoose")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,s)=>{Object.defineProperty(s,"l",{enumerable:!0,get:function(){return function e(s,t){return t in s?s[t]:"then"in s&&"function"==typeof s.then?s.then(s=>e(s,t)):"function"==typeof s&&"default"===t?s:void 0}}})},66206:(e,s,t)=>{t.r(s),t.d(s,{config:()=>l,default:()=>d,routeModule:()=>g});var n={};t.r(n),t.d(n,{default:()=>u});var a=t(71802),r=t(47153),o=t(56249),c=t(23776),i=t(4441);async function u(e,s){switch(await (0,c.Z)(),e.method){case"GET":try{let e=await i.Z.find();s.status(200).json({success:!0,data:e})}catch(e){s.status(400).json({success:!1,message:"Failed to fetch captains"})}break;case"POST":try{let{name:t,pin:n,tables:a}=e.body;if(!t||!n||4!==n.length)return s.status(400).json({success:!1,message:"Captain name and valid 4-digit PIN required."});if(await i.Z.findOne({name:t}))return s.status(400).json({success:!1,message:"Captain already assigned."});let r=new i.Z({name:t,pin:n,tables:a});await r.save(),s.status(201).json({success:!0,message:"Captain assigned successfully",data:r})}catch(e){s.status(500).json({success:!1,message:"Server error"})}break;case"PUT":try{let{id:t,name:n,pin:a,tables:r}=e.body,o=await i.Z.findByIdAndUpdate(t,{name:n,pin:a,tables:r},{new:!0});if(!o)return s.status(404).json({success:!1,message:"Captain not found"});s.status(200).json({success:!0,message:"Captain updated successfully",data:o})}catch(e){s.status(500).json({success:!1,message:"Server error"})}break;case"DELETE":try{let{id:t}=e.body;if(!await i.Z.findByIdAndDelete(t))return s.status(404).json({success:!1,message:"Captain not found"});s.status(200).json({success:!0,message:"Captain deleted successfully"})}catch(e){s.status(500).json({success:!1,message:"Server error"})}break;default:s.status(405).json({success:!1,message:"Method not allowed"})}}let d=(0,o.l)(n,"default"),l=(0,o.l)(n,"config"),g=new a.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/vectory",pathname:"/api/vectory",bundlePath:"",filename:""},userland:n})},47153:(e,s)=>{var t;Object.defineProperty(s,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},71802:(e,s,t)=>{e.exports=t(20145)},23776:(e,s,t)=>{t.d(s,{Z:()=>c});var n=t(11185);let a=process.env.MONGODB_URI,r=process.env.DB_NAME,o=null;if(!a)throw Error("Please define the MONGODB_URI environment variable inside .env.local");async function c(){if(o)return console.log("Using cached database connection"),"Using cached database connection";try{await n.connect(a,{useNewUrlParser:!0,useUnifiedTopology:!0,dbName:r});let e=n.connection;return e.once("open",()=>{console.log("Successfully connected to MongoDB")}),e.on("error",e=>{console.error("Error connecting to MongoDB:",e.message)}),o=e,"Successfully connected to MongoDB"}catch(e){return console.error("Error connecting to MongoDB:",e.message),`Error connecting to MongoDB: ${e.message}`}}},4441:(e,s,t)=>{t.d(s,{Z:()=>r});var n=t(11185);let a=new n.Schema({name:{type:String,required:!0},pin:{type:String,required:!0,minlength:4,maxlength:4},tables:{type:[String],default:[]}},{timestamps:!0}),r=n.models.Vectory||n.model("Vectory",a)}};var s=require("../../webpack-api-runtime.js");s.C(e);var t=s(s.s=66206);module.exports=t})();