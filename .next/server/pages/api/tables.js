"use strict";(()=>{var e={};e.id=1525,e.ids=[1525],e.modules={11185:e=>{e.exports=require("mongoose")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},18278:(e,t,r)=>{r.r(t),r.d(t,{config:()=>d,default:()=>c,routeModule:()=>m});var n={};r.r(n),r.d(n,{default:()=>u});var o=r(71802),a=r(47153),s=r(56249),i=r(23776),l=r(35357);async function u(e,t){if(await (0,i.Z)(),"POST"!==e.method)return t.setHeader("Allow",["POST"]),t.status(405).end(`Method ${e.method} Not Allowed`);{let{tableName:r,seatNumber:n}=e.body;if(!r||!n)return t.status(400).json({error:"Table name and seat number are required."});try{let e=await l.Z.create({tableName:r,seatNumber:n,status:"available"});return t.status(201).json({message:"Table added successfully!",table:e})}catch(e){return console.error("Error saving table:",e),t.status(500).json({error:"Failed to add table. Please try again."})}}}let c=(0,s.l)(n,"default"),d=(0,s.l)(n,"config"),m=new o.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/tables",pathname:"/api/tables",bundlePath:"",filename:""},userland:n})},47153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},71802:(e,t,r)=>{e.exports=r(20145)},23776:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(11185);let o=process.env.MONGODB_URI,a=process.env.DB_NAME,s=null;if(!o)throw Error("Please define the MONGODB_URI environment variable inside .env.local");async function i(){if(s)return console.log("Using cached database connection"),"Using cached database connection";try{await n.connect(o,{useNewUrlParser:!0,useUnifiedTopology:!0,dbName:a});let e=n.connection;return e.once("open",()=>{console.log("Successfully connected to MongoDB")}),e.on("error",e=>{console.error("Error connecting to MongoDB:",e.message)}),s=e,"Successfully connected to MongoDB"}catch(e){return console.error("Error connecting to MongoDB:",e.message),`Error connecting to MongoDB: ${e.message}`}}},35357:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(11185);let o=new n.Schema({tableName:{type:String,required:!0,trim:!0},seatNumber:{type:Number,required:!0,min:1},status:{type:String,required:!0,enum:["occupied","reserved","available"],default:"available"},tablestatus:{type:String,required:!0,enum:["active","inactive"],default:"active"}},{timestamps:!0}),a=n.models.Table||n.model("Table",o)}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=18278);module.exports=r})();