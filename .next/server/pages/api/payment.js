"use strict";(()=>{var e={};e.id=8624,e.ids=[8624],e.modules={29336:e=>{e.exports=require("aws-sdk")},11185:e=>{e.exports=require("mongoose")},1738:e=>{e.exports=require("multer")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,n)=>{Object.defineProperty(n,"l",{enumerable:!0,get:function(){return function e(n,t){return t in n?n[t]:"then"in n&&"function"==typeof n.then?n.then(n=>e(n,t)):"function"==typeof n&&"default"===t?n:void 0}}})},56054:(e,n,t)=>{t.r(n),t.d(n,{config:()=>v,default:()=>A,routeModule:()=>E});var r={};t.r(r),t.d(r,{config:()=>y,default:()=>P});var o=t(71802),s=t(47153),a=t(56249),i=t(80382),c=t(19356),l=t(1738),u=t.n(l),d=t(29336),m=t.n(d);m().config.update({accessKeyId:process.env.AWS_ACCESS_KEY_ID,secretAccessKey:process.env.AWS_SECRET_ACCESS_KEY,region:process.env.AWS_REGION});let g=new(m()).S3,f=u().memoryStorage(),p=u()({storage:f,fileFilter:(e,n,t)=>{t(null,!0)}}),y={api:{bodyParser:!1}};async function P(e,n){if("POST"===e.method)try{await (0,i.Z)(),p.single("image")(e,n,async t=>{if(t)return n.status(500).json({message:"Error uploading image",error:t.message});let{name:r,title:o}=e.body;if(!r||!o||!e.file)return n.status(400).json({message:"All fields and an image are required"});let s={Bucket:process.env.AWS_BUCKET_NAME,Key:`payments/${Date.now()}-${e.file.originalname}`,Body:e.file.buffer,ContentType:e.file.mimetype};try{let e=await g.upload(s).promise(),t=new c.Z({name:r,title:o,imageUrl:e.Location});await t.save(),n.status(201).json({message:"Payment added successfully",Payment:t})}catch(e){n.status(500).json({message:"Error uploading image to S3",error:e.message})}})}catch(e){n.status(500).json({message:"Internal server error",error:e})}else if("GET"===e.method)try{await (0,i.Z)();let e=await c.Z.find();n.status(200).json(e)}catch(e){n.status(500).json({message:"Internal server error",error:e})}else if("PUT"===e.method)try{await (0,i.Z)();let{id:t}=e.query,{status:r}=e.body,o=await c.Z.findByIdAndUpdate(t,{status:r},{new:!0});if(!o)return n.status(404).json({message:"Payment not found"});n.status(200).json(o)}catch(e){n.status(500).json({message:"Internal server error",error:e})}else n.status(405).json({message:"Method not allowed"})}let A=(0,a.l)(r,"default"),v=(0,a.l)(r,"config"),E=new o.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/payment",pathname:"/api/payment",bundlePath:"",filename:""},userland:r})},80382:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(11185),o=t.n(r);let s=process.env.MONGODB_URI,a=process.env.DB_NAME,i=null;if(!s)throw Error("Please define the MONGODB_URI environment variable inside .env.local");async function c(){if(i)return console.log("Using cached database connection"),"Using cached database connection";try{await o().connect(s,{useNewUrlParser:!0,useUnifiedTopology:!0,dbName:a});let e=o().connection;return e.once("open",()=>{console.log("Successfully connected to MongoDB")}),e.on("error",e=>{console.error("Error connecting to MongoDB:",e.message)}),i=e,"Successfully connected to MongoDB"}catch(e){return console.error("Error connecting to MongoDB:",e.message),`Error connecting to MongoDB: ${e.message}`}}},19356:(e,n,t)=>{t.d(n,{Z:()=>a});var r=t(11185),o=t.n(r);let s=new(o()).Schema({name:{type:String,required:!0,unique:!0},imageUrl:{type:String,required:!0},title:{type:String,required:!0},status:{type:String,enum:["active","inActive","blocked"],default:"active"}}),a=o().models.Payment||o().model("Payment",s)},47153:(e,n)=>{var t;Object.defineProperty(n,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},71802:(e,n,t)=>{e.exports=t(20145)}};var n=require("../../webpack-api-runtime.js");n.C(e);var t=n(n.s=56054);module.exports=t})();