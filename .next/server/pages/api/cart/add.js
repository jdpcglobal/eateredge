"use strict";(()=>{var e={};e.id=3054,e.ids=[3054],e.modules={99344:e=>{e.exports=require("jsonwebtoken")},11185:e=>{e.exports=require("mongoose")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},4459:(e,t,r)=>{r.r(t),r.d(t,{config:()=>m,default:()=>f,routeModule:()=>p});var n={};r.r(n),r.d(n,{default:()=>l});var o=r(71802),s=r(47153),a=r(56249),i=r(23776),d=r(36068),c=r(5438),u=r(99344);async function l(e,t){if("POST"===e.method){await (0,i.Z)();let{token:r,foodId:n,quantity:o,imageUrl:s,name:a,price:l}=e.body;if(!r||!n||void 0===o)return t.status(400).json({success:!1,message:"Token, foodId, and quantity are required"});try{let e=u.verify(r,process.env.JWT_SECRET).userId;if(!await c.Z.findById(e))return t.status(404).json({success:!1,message:"User not found"});let i=l*o,f=await d.Z.findOne({userId:e,foodId:n});return f?(f.quantity=o,f.totalPrice=i,await f.save()):await d.Z.create({userId:e,foodId:n,imageUrl:s,name:a,price:l,quantity:o,totalPrice:i}),t.status(200).json({success:!0,message:"Item added to cart"})}catch(e){return console.error("Error adding item to cart:",e),t.status(500).json({success:!1,message:"Failed to add item to cart",error:e.message})}}else t.setHeader("Allow",["POST"]),t.status(405).end(`Method ${e.method} Not Allowed`)}let f=(0,a.l)(n,"default"),m=(0,a.l)(n,"config"),p=new o.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/cart/add",pathname:"/api/cart/add",bundlePath:"",filename:""},userland:n})},47153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},71802:(e,t,r)=>{e.exports=r(20145)},23776:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(11185);let o=process.env.MONGODB_URI,s=process.env.DB_NAME,a=null;if(!o)throw Error("Please define the MONGODB_URI environment variable inside .env.local");async function i(){if(a)return console.log("Using cached database connection"),"Using cached database connection";try{await n.connect(o,{useNewUrlParser:!0,useUnifiedTopology:!0,dbName:s});let e=n.connection;return e.once("open",()=>{console.log("Successfully connected to MongoDB")}),e.on("error",e=>{console.error("Error connecting to MongoDB:",e.message)}),a=e,"Successfully connected to MongoDB"}catch(e){return console.error("Error connecting to MongoDB:",e.message),`Error connecting to MongoDB: ${e.message}`}}},36068:(e,t,r)=>{r.d(t,{Z:()=>s});var n=r(11185);let o=new n.Schema({userId:{type:n.Schema.Types.ObjectId,ref:"User",required:!0},foodId:{type:n.Schema.Types.ObjectId,ref:"Item",required:!0},quantity:{type:Number,default:1,required:!0}},{timestamps:!0}),s=n.models.Cart||n.model("Cart",o)},5438:(e,t,r)=>{r.d(t,{Z:()=>s});var n=r(11185);let o=new n.Schema({userName:{type:String,required:!0,unique:!0},mobileNumber:{type:String,required:!0,unique:!0},isVerified:{type:Boolean,required:!0,default:!1}}),s=n.models.User||n.model("User",o)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=t(t.s=4459);module.exports=r})();