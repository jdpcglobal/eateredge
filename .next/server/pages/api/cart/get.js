"use strict";(()=>{var e={};e.id=1295,e.ids=[1295],e.modules={99344:e=>{e.exports=require("jsonwebtoken")},11185:e=>{e.exports=require("mongoose")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},30718:(e,t,r)=>{r.r(t),r.d(t,{config:()=>f,default:()=>l,routeModule:()=>p});var n={};r.r(n),r.d(n,{default:()=>d});var o=r(71802),a=r(47153),s=r(56249),i=r(23776),c=r(36068),u=r(99344);let d=async(e,t)=>{let r=e.headers.authorization?.split(" ")[1];if(!r)return t.status(401).json({message:"Token is required"});try{let{userId:e}=u.verify(r,process.env.JWT_SECRET);await (0,i.Z)();let n=await c.Z.find({userId:e}).populate("foodId","name price imageUrl").exec();if(!n||0===n.length)return t.status(200).json({cartItems:[]});let o=n.map(e=>({foodId:e.foodId,quantity:e.quantity}));return t.status(200).json({cartItems:o})}catch(e){return console.error("Error fetching cart:",e),t.status(500).json({message:"Error fetching cart",error:e})}},l=(0,s.l)(n,"default"),f=(0,s.l)(n,"config"),p=new o.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/cart/get",pathname:"/api/cart/get",bundlePath:"",filename:""},userland:n})},47153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},71802:(e,t,r)=>{e.exports=r(20145)},23776:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(11185);let o=process.env.MONGODB_URI,a=process.env.DB_NAME,s=null;if(!o)throw Error("Please define the MONGODB_URI environment variable inside .env.local");async function i(){if(s)return console.log("Using cached database connection"),"Using cached database connection";try{await n.connect(o,{useNewUrlParser:!0,useUnifiedTopology:!0,dbName:a});let e=n.connection;return e.once("open",()=>{console.log("Successfully connected to MongoDB")}),e.on("error",e=>{console.error("Error connecting to MongoDB:",e.message)}),s=e,"Successfully connected to MongoDB"}catch(e){return console.error("Error connecting to MongoDB:",e.message),`Error connecting to MongoDB: ${e.message}`}}},36068:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(11185);let o=new n.Schema({userId:{type:n.Schema.Types.ObjectId,ref:"User",required:!0},foodId:{type:n.Schema.Types.ObjectId,ref:"Item",required:!0},quantity:{type:Number,default:1,required:!0}},{timestamps:!0}),a=n.models.Cart||n.model("Cart",o)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=t(t.s=30718);module.exports=r})();