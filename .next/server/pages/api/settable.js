"use strict";(()=>{var e={};e.id=7425,e.ids=[7425],e.modules={11185:e=>{e.exports=require("mongoose")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,a){return a in t?t[a]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,a)):"function"==typeof t&&"default"===a?t:void 0}}})},56413:(e,t,a)=>{a.r(t),a.d(t,{config:()=>u,default:()=>l,routeModule:()=>c});var n={};a.r(n),a.d(n,{default:()=>d});var o=a(71802),s=a(47153),r=a(56249),i=a(35357);(0,a(23776).Z)();let d=async(e,t)=>{switch(e.method){case"GET":try{let e=await i.Z.find();t.status(200).json(e)}catch(e){t.status(500).json({message:"Failed to fetch tables",error:e})}break;case"PATCH":try{let{id:a}=e.query,{tablestatus:n}=e.body,o=await i.Z.findByIdAndUpdate(a,{tablestatus:n},{new:!0});o?t.status(200).json(o):t.status(404).json({message:"Table not found"})}catch(e){t.status(500).json({message:"Failed to update table status",error:e})}break;case"DELETE":try{let{id:a}=e.query;await i.Z.findByIdAndDelete(a)?t.status(204).end():t.status(404).json({message:"Table not found"})}catch(e){t.status(500).json({message:"Failed to delete table",error:e})}break;case"PUT":try{let{id:a}=e.query,n=await i.Z.findByIdAndUpdate(a,e.body,{new:!0});n?t.status(200).json(n):t.status(404).json({message:"Table not found"})}catch(e){t.status(500).json({message:"Failed to update table",error:e})}break;default:t.setHeader("Allow",["GET","POST","PATCH","DELETE","PUT"]),t.status(405).end(`Method ${e.method} Not Allowed`)}},l=(0,r.l)(n,"default"),u=(0,r.l)(n,"config"),c=new o.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/settable",pathname:"/api/settable",bundlePath:"",filename:""},userland:n})},47153:(e,t)=>{var a;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return a}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(a||(a={}))},71802:(e,t,a)=>{e.exports=a(20145)},23776:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(11185);let o=process.env.MONGODB_URI,s=process.env.DB_NAME,r=null;if(!o)throw Error("Please define the MONGODB_URI environment variable inside .env.local");async function i(){if(r)return console.log("Using cached database connection"),"Using cached database connection";try{await n.connect(o,{useNewUrlParser:!0,useUnifiedTopology:!0,dbName:s});let e=n.connection;return e.once("open",()=>{console.log("Successfully connected to MongoDB")}),e.on("error",e=>{console.error("Error connecting to MongoDB:",e.message)}),r=e,"Successfully connected to MongoDB"}catch(e){return console.error("Error connecting to MongoDB:",e.message),`Error connecting to MongoDB: ${e.message}`}}},35357:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(11185);let o=new n.Schema({tableName:{type:String,required:!0,trim:!0},seatNumber:{type:Number,required:!0,min:1},status:{type:String,required:!0,enum:["occupied","reserved","available"],default:"available"},tablestatus:{type:String,required:!0,enum:["active","inactive"],default:"active"}},{timestamps:!0}),s=n.models.Table||n.model("Table",o)}};var t=require("../../webpack-api-runtime.js");t.C(e);var a=t(t.s=56413);module.exports=a})();