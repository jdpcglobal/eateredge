"use strict";(()=>{var e={};e.id=296,e.ids=[296],e.modules={11185:e=>{e.exports=require("mongoose")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},73645:(e,r,t)=>{t.r(r),t.d(r,{config:()=>l,default:()=>c,routeModule:()=>p});var n={};t.r(n),t.d(n,{default:()=>u});var o=t(71802),i=t(47153),d=t(56249),a=t(23776),s=t(39956);async function u(e,r){await (0,a.Z)();try{let e=await s.Z.find().populate({path:"user",select:"mobileNumber"}).populate({path:"selectedAddress",select:"flatNo landmark location"}).populate({path:"items.foodId"});r.status(200).json({success:!0,orders:e})}catch(e){r.status(500).json({success:!1,message:e.message})}}t(5438),t(14779),t(71284);let c=(0,d.l)(n,"default"),l=(0,d.l)(n,"config"),p=new o.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/ordersList",pathname:"/api/ordersList",bundlePath:"",filename:""},userland:n})},47153:(e,r)=>{var t;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},71802:(e,r,t)=>{e.exports=t(20145)},23776:(e,r,t)=>{t.d(r,{Z:()=>a});var n=t(11185);let o=process.env.MONGODB_URI,i=process.env.DB_NAME,d=null;if(!o)throw Error("Please define the MONGODB_URI environment variable inside .env.local");async function a(){if(d)return console.log("Using cached database connection"),"Using cached database connection";try{await n.connect(o,{useNewUrlParser:!0,useUnifiedTopology:!0,dbName:i});let e=n.connection;return e.once("open",()=>{console.log("Successfully connected to MongoDB")}),e.on("error",e=>{console.error("Error connecting to MongoDB:",e.message)}),d=e,"Successfully connected to MongoDB"}catch(e){return console.error("Error connecting to MongoDB:",e.message),`Error connecting to MongoDB: ${e.message}`}}},14779:(e,r,t)=>{t.d(r,{Z:()=>i});var n=t(11185);let o=new n.Schema({userId:{type:n.Schema.Types.ObjectId,required:!0,ref:"User"},location:{type:String,required:!0},flatNo:{type:String,required:!0},landmark:{type:String},createdAt:{type:Date,default:Date.now}}),i=n.models.Address||n.model("Address",o)},39956:(e,r,t)=>{t.d(r,{Z:()=>i});var n=t(11185);let o=new n.Schema({user:{type:n.Schema.Types.ObjectId,ref:"User",required:!0},selectedAddress:{type:n.Schema.Types.ObjectId,ref:"Address",required:!0},items:[{foodId:{type:n.Schema.Types.ObjectId,ref:"Item",required:!0},quantity:{type:Number,required:!0},price:{type:Number,required:!0}}],totalAmount:{type:Number,required:!0},itemDiscount:{type:Number,required:!0},couponDiscount:{type:Number,required:!0},totalGst:{type:Number,required:!0},deliveryFee:{type:Number,required:!0},subtotal:{type:Number,required:!0},paymentMethod:{type:String,enum:["UPI","CashOnDelivery"],required:!0},UTR:{type:String},paymentStatus:{type:String,enum:["Paid","Cash on Delivery"],required:!0,default:"Pending"},status:{type:String,enum:["Order Processing","Accepted","Food Preparing","Out For Delivery","Delivered","Cancelled"],default:"Order Processing"},date:{type:Date,default:Date.now}}),i=n.models.OrderPayment||n.model("OrderPayment",o)},71284:(e,r,t)=>{t.d(r,{Z:()=>i});var n=t(11185);let o=new n.Schema({imageUrl:{type:String},name:{type:String,required:!0},description:{type:String,required:!0},category:{type:String,required:!0},price:{type:Number,required:!0},discount:{type:Number,required:!0},gstRate:{type:Number,required:!0},vegOrNonVeg:{type:String,enum:["Veg","Non-Veg"],required:!0}}),i=n.models.Item||n.model("Item",o)},5438:(e,r,t)=>{t.d(r,{Z:()=>i});var n=t(11185);let o=new n.Schema({userName:{type:String,required:!0,unique:!0},mobileNumber:{type:String,required:!0,unique:!0},isVerified:{type:Boolean,required:!0,default:!1}}),i=n.models.User||n.model("User",o)}};var r=require("../../webpack-api-runtime.js");r.C(e);var t=r(r.s=73645);module.exports=t})();