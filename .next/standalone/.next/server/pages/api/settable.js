"use strict";(()=>{var e={};e.id=7425,e.ids=[7425],e.modules={11185:e=>{e.exports=require("mongoose")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},34865:(e,t,n)=>{n.r(t),n.d(t,{config:()=>u,default:()=>l,routeModule:()=>c});var a={};n.r(a),n.d(a,{default:()=>d});var o=n(71802),s=n(47153),r=n(56249),i=n(28041);(0,n(80382).Z)();let d=async(e,t)=>{switch(e.method){case"GET":try{let e=await i.Z.find();t.status(200).json(e)}catch(e){t.status(500).json({message:"Failed to fetch tables",error:e})}break;case"PATCH":try{let{id:n}=e.query,{tablestatus:a}=e.body,o=await i.Z.findByIdAndUpdate(n,{tablestatus:a},{new:!0});o?t.status(200).json(o):t.status(404).json({message:"Table not found"})}catch(e){t.status(500).json({message:"Failed to update table status",error:e})}break;case"DELETE":try{let{id:n}=e.query;await i.Z.findByIdAndDelete(n)?t.status(204).end():t.status(404).json({message:"Table not found"})}catch(e){t.status(500).json({message:"Failed to delete table",error:e})}break;case"PUT":try{let{id:n}=e.query,a=await i.Z.findByIdAndUpdate(n,e.body,{new:!0});a?t.status(200).json(a):t.status(404).json({message:"Table not found"})}catch(e){t.status(500).json({message:"Failed to update table",error:e})}break;default:t.setHeader("Allow",["GET","POST","PATCH","DELETE","PUT"]),t.status(405).end(`Method ${e.method} Not Allowed`)}},l=(0,r.l)(a,"default"),u=(0,r.l)(a,"config"),c=new o.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/settable",pathname:"/api/settable",bundlePath:"",filename:""},userland:a})},80382:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(11185),o=n.n(a);let s=process.env.MONGODB_URI,r=process.env.DB_NAME,i=null;if(!s)throw Error("Please define the MONGODB_URI environment variable inside .env.local");async function d(){if(i)return console.log("Using cached database connection"),"Using cached database connection";try{await o().connect(s,{useNewUrlParser:!0,useUnifiedTopology:!0,dbName:r});let e=o().connection;return e.once("open",()=>{console.log("Successfully connected to MongoDB")}),e.on("error",e=>{console.error("Error connecting to MongoDB:",e.message)}),i=e,"Successfully connected to MongoDB"}catch(e){return console.error("Error connecting to MongoDB:",e.message),`Error connecting to MongoDB: ${e.message}`}}},28041:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(11185),o=n.n(a);let s=new(o()).Schema({tableName:{type:String,required:!0,trim:!0},seatNumber:{type:Number,required:!0,min:1},status:{type:String,required:!0,enum:["occupied","reserved","available"],default:"available"},tablestatus:{type:String,required:!0,enum:["active","inactive"],default:"active"}},{timestamps:!0}),r=o().models.Table||o().model("Table",s)},47153:(e,t)=>{var n;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return n}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(n||(n={}))},71802:(e,t,n)=>{e.exports=n(20145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var n=t(t.s=34865);module.exports=n})();