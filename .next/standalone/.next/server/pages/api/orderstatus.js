"use strict";(()=>{var e={};e.id=6511,e.ids=[6511],e.modules={11185:e=>{e.exports=require("mongoose")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},41435:(e,t,n)=>{n.r(t),n.d(t,{config:()=>d,default:()=>c,routeModule:()=>f});var r={};n.r(r),n.d(r,{default:()=>l});var o=n(71802),a=n(47153),s=n(56249),u=n(80382),i=n(28041);let l=async(e,t)=>{if("PUT"!==e.method)return console.warn(`Invalid method: ${e.method}`),t.status(405).json({message:"Method not allowed"});{let{tableName:n,status:r}=e.body;if(console.log("Received update request:",e.body),!n||!r||"string"!=typeof n||"string"!=typeof r)return console.error("Invalid request data:",{tableName:n,status:r}),t.status(400).json({message:"Table name and status are required"});try{await (0,u.Z)();let e=await i.Z.findOneAndUpdate({tableName:n},{status:r},{new:!0});if(!e)return console.warn(`Table not found: ${n}`),t.status(404).json({message:"Table not found"});return console.log("Table status updated successfully:",e),t.status(200).json({ok:!0,message:"Status updated successfully",data:e})}catch(e){return console.error("Error updating table status:",e),t.status(500).json({message:"Internal server error"})}}},c=(0,s.l)(r,"default"),d=(0,s.l)(r,"config"),f=new o.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/orderstatus",pathname:"/api/orderstatus",bundlePath:"",filename:""},userland:r})},80382:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(11185),o=n.n(r);let a=process.env.MONGODB_URI,s=process.env.DB_NAME,u=null;if(!a)throw Error("Please define the MONGODB_URI environment variable inside .env.local");async function i(){if(u)return console.log("Using cached database connection"),"Using cached database connection";try{await o().connect(a,{useNewUrlParser:!0,useUnifiedTopology:!0,dbName:s});let e=o().connection;return e.once("open",()=>{console.log("Successfully connected to MongoDB")}),e.on("error",e=>{console.error("Error connecting to MongoDB:",e.message)}),u=e,"Successfully connected to MongoDB"}catch(e){return console.error("Error connecting to MongoDB:",e.message),`Error connecting to MongoDB: ${e.message}`}}},28041:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(11185),o=n.n(r);let a=new(o()).Schema({tableName:{type:String,required:!0,trim:!0},seatNumber:{type:Number,required:!0,min:1},status:{type:String,required:!0,enum:["occupied","reserved","available"],default:"available"},tablestatus:{type:String,required:!0,enum:["active","inactive"],default:"active"}},{timestamps:!0}),s=o().models.Table||o().model("Table",a)},47153:(e,t)=>{var n;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return n}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(n||(n={}))},71802:(e,t,n)=>{e.exports=n(20145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var n=t(t.s=41435);module.exports=n})();