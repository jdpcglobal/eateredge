"use strict";(()=>{var e={};e.id=8502,e.ids=[8502],e.modules={11185:e=>{e.exports=require("mongoose")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},39234:(e,t,r)=>{r.r(t),r.d(t,{config:()=>m,default:()=>l,routeModule:()=>p});var n={};r.r(n),r.d(n,{default:()=>u});var o=r(71802),a=r(47153),i=r(56249),s=r(23776),c=r(36068),d=r(71284);async function u(e,t){if(await (0,s.Z)(),"POST"===e.method)try{let{cartItems:r,userId:n}=e.body,o=await Promise.all(r.map(async e=>{let t=await d.Z.findById(e._id);if(!t){let t=new d.Z({name:e.name,price:e.price,imgsrc:e.imgsrc});return await t.save(),t._id}return t._id})),a=new c.Z({userId:n,items:o.map((e,t)=>({itemId:e,quantity:r[t].count})),totalAmount:r.reduce((e,t)=>e+t.price*t.count,0)});await a.save(),t.status(200).json({message:"Cart saved successfully"})}catch(e){t.status(500).json({error:"Failed to save cart"})}else t.setHeader("Allow",["POST"]),t.status(405).end(`Method ${e.method} Not Allowed`)}let l=(0,i.l)(n,"default"),m=(0,i.l)(n,"config"),p=new o.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/saveCartItems",pathname:"/api/saveCartItems",bundlePath:"",filename:""},userland:n})},47153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},71802:(e,t,r)=>{e.exports=r(20145)},23776:(e,t,r)=>{r.d(t,{Z:()=>s});var n=r(11185);let o=process.env.MONGODB_URI,a=process.env.DB_NAME,i=null;if(!o)throw Error("Please define the MONGODB_URI environment variable inside .env.local");async function s(){if(i)return console.log("Using cached database connection"),"Using cached database connection";try{await n.connect(o,{useNewUrlParser:!0,useUnifiedTopology:!0,dbName:a});let e=n.connection;return e.once("open",()=>{console.log("Successfully connected to MongoDB")}),e.on("error",e=>{console.error("Error connecting to MongoDB:",e.message)}),i=e,"Successfully connected to MongoDB"}catch(e){return console.error("Error connecting to MongoDB:",e.message),`Error connecting to MongoDB: ${e.message}`}}},36068:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(11185);let o=new n.Schema({userId:{type:n.Schema.Types.ObjectId,ref:"User",required:!0},foodId:{type:n.Schema.Types.ObjectId,ref:"Item",required:!0},quantity:{type:Number,default:1,required:!0}},{timestamps:!0}),a=n.models.Cart||n.model("Cart",o)},71284:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(11185);let o=new n.Schema({imageUrl:{type:String},name:{type:String,required:!0},description:{type:String,required:!0},category:{type:String,required:!0},price:{type:Number,required:!0},discount:{type:Number,required:!0},gstRate:{type:Number,required:!0},vegOrNonVeg:{type:String,enum:["Veg","Non-Veg"],required:!0}}),a=n.models.Item||n.model("Item",o)}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=39234);module.exports=r})();