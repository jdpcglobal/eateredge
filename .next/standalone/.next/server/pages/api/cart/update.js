"use strict";(()=>{var e={};e.id=2863,e.ids=[2863],e.modules={99344:e=>{e.exports=require("jsonwebtoken")},11185:e=>{e.exports=require("mongoose")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},44498:(e,t,n)=>{n.r(t),n.d(t,{config:()=>p,default:()=>m,routeModule:()=>g});var r={};n.r(r),n.d(r,{default:()=>f});var o=n(71802),s=n(47153),a=n(56249),i=n(80382),u=n(64122),c=n(82667),d=n(99344),l=n.n(d);async function f(e,t){if("POST"===e.method){await (0,i.Z)();let{token:n,foodId:r,quantity:o}=e.body;if(!n||!r||void 0===o)return t.status(400).json({success:!1,message:"Token, foodId, and quantity are required"});try{let e=l().verify(n,process.env.JWT_SECRET).userId;if(!await c.Z.findById(e))return t.status(404).json({success:!1,message:"User not found"});let s=await u.Z.findOne({userId:e,foodId:r});if(!s)return t.status(404).json({success:!1,message:"Item not found in cart"});return s.quantity=o,s.totalPrice=s.price*o,await s.save(),t.status(200).json({success:!0,message:"Item quantity updated"})}catch(e){return console.error("Error updating item quantity:",e),t.status(500).json({success:!1,message:"Failed to update item quantity",error:e.message})}}else t.setHeader("Allow",["POST"]),t.status(405).end(`Method ${e.method} Not Allowed`)}let m=(0,a.l)(r,"default"),p=(0,a.l)(r,"config"),g=new o.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/cart/update",pathname:"/api/cart/update",bundlePath:"",filename:""},userland:r})},80382:(e,t,n)=>{n.d(t,{Z:()=>u});var r=n(11185),o=n.n(r);let s=process.env.MONGODB_URI,a=process.env.DB_NAME,i=null;if(!s)throw Error("Please define the MONGODB_URI environment variable inside .env.local");async function u(){if(i)return console.log("Using cached database connection"),"Using cached database connection";try{await o().connect(s,{useNewUrlParser:!0,useUnifiedTopology:!0,dbName:a});let e=o().connection;return e.once("open",()=>{console.log("Successfully connected to MongoDB")}),e.on("error",e=>{console.error("Error connecting to MongoDB:",e.message)}),i=e,"Successfully connected to MongoDB"}catch(e){return console.error("Error connecting to MongoDB:",e.message),`Error connecting to MongoDB: ${e.message}`}}},64122:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(11185),o=n.n(r);let s=new(o()).Schema({userId:{type:o().Schema.Types.ObjectId,ref:"User",required:!0},foodId:{type:o().Schema.Types.ObjectId,ref:"Item",required:!0},quantity:{type:Number,default:1,required:!0}},{timestamps:!0}),a=o().models.Cart||o().model("Cart",s)},82667:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(11185),o=n.n(r);let s=new(o()).Schema({userName:{type:String,required:!0,unique:!0},mobileNumber:{type:String,required:!0,unique:!0},isVerified:{type:Boolean,required:!0,default:!1}}),a=o().models.User||o().model("User",s)},47153:(e,t)=>{var n;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return n}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(n||(n={}))},71802:(e,t,n)=>{e.exports=n(20145)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var n=t(t.s=44498);module.exports=n})();